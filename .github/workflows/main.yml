name: docker-java-test-app

on:
  push:
    branches: main
    
jobs:
  build_and_test:
    runs-on: ubuntu-latest
  
  services:
    redis:
      images: redis
        options: >-
          --health-cmd "redis-clis ping"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 6379:6379
name: docker-java-test-app

on:
  push:
    branches: main
    
jobs:
  build_and_test:
    runs-on: ubuntu-latest
  
    services:
      redis:
      images: redis
      options: >-
      --health-cmd "redis-clis ping"
      --health-interval 5s
      --health-timeout 5s
      --health-retries 3
     ports:
      - 6379:6379
     steps:
       - uses: actions/checkout@v2
       - name: Set up JDK
         uses: actions/setup-java@v3.10.0
         with:
           java-version: 14
     steps:
       - uses: actions/checkout@v3.3.0
       - name: Set up JDK
         uses: actions/setup-java@v3.10.0
         with:
           java-version: 14
     steps:    
   - name: Cache maven project
     uses: action/cache@v3.2.4
     with:
       path: ~/.m2
       key: ${{ runner.os }}-m2-${{ hashfiles('**/pom.xml') }}
       restore-keys: ${{ runner.os }}-m2
       
   - name: Build and test project with maven
     run: mvn -B package --file pom.xml

  publish-job:
    runs-on: ubuntu
    needs: [build_and_test]
    steps:
      - uses: actions/checkout@v3.3.0
      - uses: actions/setup-java@v3.10.0
        with:
          java-version: 14
      - run: mvn -B package --file pom.xml -DskipsTest
      - run: mkdir staging && cp target/*jar-with-dependencies.jar staging
      - uses: actions/upload-artifact@v3.1.2
        with:
          name: Package
          path: staging
          
  build-docker-image:
    name: publish-to-docker-hub
    runs-on: ubuntu-latest
    needs: [build_and_test]
    
    steps:
      - uses: acntions/checkout@v3.3.0
      - name: Login to Docker Hub
        run: docker login -u ${{ secret.DOCKER_USERNAME_ }} -p ${{ secret.DOCKER_PASSWORD }}
      - name: Build Container image
        run: docker build -t ${{ secret.DOCKER_REPOSITORY }}:latest
      - name: Publish Docker Image
        run: docker push ${{ secret.DOCKER_REPOSITORY }}
